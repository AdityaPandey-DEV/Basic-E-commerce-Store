{"ast":null,"code":"var _jsxFileName = \"/Users/adityapandey/Desktop/HarshKumar/client/src/pages/GoogleCallbackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials } from '../store/slices/authSlice';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleCallbackPage = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const token = searchParams.get('token');\n    const error = searchParams.get('error');\n    if (error) {\n      toast.error('Google authentication failed. Please try again.');\n      navigate('/login');\n      return;\n    }\n    if (token) {\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n\n      // Fetch user data with the token\n      const fetchUserData = async () => {\n        try {\n          const API_BASE_URL = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_API_URL || 'https://your-backend.onrender.com' : 'http://localhost:5000';\n          const response = await fetch(`${API_BASE_URL}/api/auth/me`, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            dispatch(setCredentials({\n              user: data.user,\n              token\n            }));\n            toast.success('Successfully signed in with Google!');\n            navigate('/');\n          } else {\n            throw new Error('Failed to fetch user data');\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n          toast.error('Authentication failed. Please try again.');\n          navigate('/login');\n        }\n      };\n      fetchUserData();\n    } else {\n      toast.error('Authentication failed. Please try again.');\n      navigate('/login');\n    }\n  }, [searchParams, navigate, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-gray-600\",\n        children: \"Completing Google sign-in...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleCallbackPage, \"ECgL2VH5nqNVxgAmVk3OxqOp5Ok=\", false, function () {\n  return [useSearchParams, useNavigate, useDispatch];\n});\n_c = GoogleCallbackPage;\nexport default GoogleCallbackPage;\nvar _c;\n$RefreshReg$(_c, \"GoogleCallbackPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","useSearchParams","useDispatch","setCredentials","LoadingSpinner","toast","jsxDEV","_jsxDEV","GoogleCallbackPage","_s","searchParams","navigate","dispatch","token","get","error","localStorage","setItem","fetchUserData","API_BASE_URL","process","env","NODE_ENV","REACT_APP_API_URL","response","fetch","headers","ok","data","json","user","success","Error","console","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adityapandey/Desktop/HarshKumar/client/src/pages/GoogleCallbackPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials } from '../store/slices/authSlice';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport toast from 'react-hot-toast';\n\nconst GoogleCallbackPage = () => {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const token = searchParams.get('token');\n    const error = searchParams.get('error');\n\n    if (error) {\n      toast.error('Google authentication failed. Please try again.');\n      navigate('/login');\n      return;\n    }\n\n    if (token) {\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n      \n      // Fetch user data with the token\n      const fetchUserData = async () => {\n        try {\n          const API_BASE_URL = process.env.NODE_ENV === 'production' \n            ? process.env.REACT_APP_API_URL || 'https://your-backend.onrender.com'\n            : 'http://localhost:5000';\n          const response = await fetch(`${API_BASE_URL}/api/auth/me`, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n\n          if (response.ok) {\n            const data = await response.json();\n            dispatch(setCredentials({ user: data.user, token }));\n            toast.success('Successfully signed in with Google!');\n            navigate('/');\n          } else {\n            throw new Error('Failed to fetch user data');\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n          toast.error('Authentication failed. Please try again.');\n          navigate('/login');\n        }\n      };\n\n      fetchUserData();\n    } else {\n      toast.error('Authentication failed. Please try again.');\n      navigate('/login');\n    }\n  }, [searchParams, navigate, dispatch]);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <div className=\"text-center\">\n        <LoadingSpinner size=\"xl\" />\n        <p className=\"mt-4 text-gray-600\">Completing Google sign-in...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default GoogleCallbackPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}