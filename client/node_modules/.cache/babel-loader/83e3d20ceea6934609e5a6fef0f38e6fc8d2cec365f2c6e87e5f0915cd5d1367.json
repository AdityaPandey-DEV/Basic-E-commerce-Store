{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={items:JSON.parse(localStorage.getItem('cartItems'))||[],totalItems:0,totalPrice:0,shippingAddress:JSON.parse(localStorage.getItem('shippingAddress'))||null};const cartSlice=createSlice({name:'cart',initialState,reducers:{addToCart:(state,action)=>{const{product,quantity=1}=action.payload;const existingItem=state.items.find(item=>item._id===product._id);if(existingItem){existingItem.quantity+=quantity;}else{var _product$images$;state.items.push({_id:product._id,name:product.name,price:product.price,image:((_product$images$=product.images[0])===null||_product$images$===void 0?void 0:_product$images$.url)||'',stock:product.stock,quantity});}// Update totals\nstate.totalItems=state.items.reduce((total,item)=>total+item.quantity,0);state.totalPrice=state.items.reduce((total,item)=>total+item.price*item.quantity,0);// Save to localStorage\nlocalStorage.setItem('cartItems',JSON.stringify(state.items));},removeFromCart:(state,action)=>{state.items=state.items.filter(item=>item._id!==action.payload);// Update totals\nstate.totalItems=state.items.reduce((total,item)=>total+item.quantity,0);state.totalPrice=state.items.reduce((total,item)=>total+item.price*item.quantity,0);// Save to localStorage\nlocalStorage.setItem('cartItems',JSON.stringify(state.items));},updateQuantity:(state,action)=>{const{productId,quantity}=action.payload;const item=state.items.find(item=>item._id===productId);if(item){if(quantity<=0){state.items=state.items.filter(item=>item._id!==productId);}else{item.quantity=quantity;}}// Update totals\nstate.totalItems=state.items.reduce((total,item)=>total+item.quantity,0);state.totalPrice=state.items.reduce((total,item)=>total+item.price*item.quantity,0);// Save to localStorage\nlocalStorage.setItem('cartItems',JSON.stringify(state.items));},clearCart:state=>{state.items=[];state.totalItems=0;state.totalPrice=0;localStorage.removeItem('cartItems');},saveShippingAddress:(state,action)=>{state.shippingAddress=action.payload;localStorage.setItem('shippingAddress',JSON.stringify(action.payload));},clearShippingAddress:state=>{state.shippingAddress=null;localStorage.removeItem('shippingAddress');},closeCart:state=>{// This action is handled by the UI slice, but we include it here for consistency\n// The actual cart closing logic is in the UI slice\n}}});export const{addToCart,removeFromCart,updateQuantity,clearCart,saveShippingAddress,clearShippingAddress,closeCart}=cartSlice.actions;export default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","JSON","parse","localStorage","getItem","totalItems","totalPrice","shippingAddress","cartSlice","name","reducers","addToCart","state","action","product","quantity","payload","existingItem","find","item","_id","_product$images$","push","price","image","images","url","stock","reduce","total","setItem","stringify","removeFromCart","filter","updateQuantity","productId","clearCart","removeItem","saveShippingAddress","clearShippingAddress","closeCart","actions","reducer"],"sources":["/Users/adityapandey/Desktop/HarshKumar/client/src/store/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  items: JSON.parse(localStorage.getItem('cartItems')) || [],\n  totalItems: 0,\n  totalPrice: 0,\n  shippingAddress: JSON.parse(localStorage.getItem('shippingAddress')) || null,\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const { product, quantity = 1 } = action.payload;\n      const existingItem = state.items.find(item => item._id === product._id);\n\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.items.push({\n          _id: product._id,\n          name: product.name,\n          price: product.price,\n          image: product.images[0]?.url || '',\n          stock: product.stock,\n          quantity,\n        });\n      }\n\n      // Update totals\n      state.totalItems = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.totalPrice = state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\n\n      // Save to localStorage\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    removeFromCart: (state, action) => {\n      state.items = state.items.filter(item => item._id !== action.payload);\n      \n      // Update totals\n      state.totalItems = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.totalPrice = state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\n\n      // Save to localStorage\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    updateQuantity: (state, action) => {\n      const { productId, quantity } = action.payload;\n      const item = state.items.find(item => item._id === productId);\n      \n      if (item) {\n        if (quantity <= 0) {\n          state.items = state.items.filter(item => item._id !== productId);\n        } else {\n          item.quantity = quantity;\n        }\n      }\n\n      // Update totals\n      state.totalItems = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.totalPrice = state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\n\n      // Save to localStorage\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    clearCart: (state) => {\n      state.items = [];\n      state.totalItems = 0;\n      state.totalPrice = 0;\n      localStorage.removeItem('cartItems');\n    },\n    saveShippingAddress: (state, action) => {\n      state.shippingAddress = action.payload;\n      localStorage.setItem('shippingAddress', JSON.stringify(action.payload));\n    },\n    clearShippingAddress: (state) => {\n      state.shippingAddress = null;\n      localStorage.removeItem('shippingAddress');\n    },\n    closeCart: (state) => {\n      // This action is handled by the UI slice, but we include it here for consistency\n      // The actual cart closing logic is in the UI slice\n    },\n  },\n});\n\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  saveShippingAddress,\n  clearShippingAddress,\n  closeCart,\n} = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}