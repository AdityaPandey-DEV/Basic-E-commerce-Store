{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: JSON.parse(localStorage.getItem('cartItems')) || [],\n  totalItems: 0,\n  totalPrice: 0,\n  shippingAddress: JSON.parse(localStorage.getItem('shippingAddress')) || null\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const {\n        product,\n        quantity = 1\n      } = action.payload;\n      const existingItem = state.items.find(item => item._id === product._id);\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        var _product$images$;\n        state.items.push({\n          _id: product._id,\n          name: product.name,\n          price: product.price,\n          image: ((_product$images$ = product.images[0]) === null || _product$images$ === void 0 ? void 0 : _product$images$.url) || '',\n          stock: product.stock,\n          quantity\n        });\n      }\n\n      // Update totals\n      state.totalItems = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.totalPrice = state.items.reduce((total, item) => total + item.price * item.quantity, 0);\n\n      // Save to localStorage\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    removeFromCart: (state, action) => {\n      state.items = state.items.filter(item => item._id !== action.payload);\n\n      // Update totals\n      state.totalItems = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.totalPrice = state.items.reduce((total, item) => total + item.price * item.quantity, 0);\n\n      // Save to localStorage\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    updateQuantity: (state, action) => {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const item = state.items.find(item => item._id === productId);\n      if (item) {\n        if (quantity <= 0) {\n          state.items = state.items.filter(item => item._id !== productId);\n        } else {\n          item.quantity = quantity;\n        }\n      }\n\n      // Update totals\n      state.totalItems = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.totalPrice = state.items.reduce((total, item) => total + item.price * item.quantity, 0);\n\n      // Save to localStorage\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    clearCart: state => {\n      state.items = [];\n      state.totalItems = 0;\n      state.totalPrice = 0;\n      localStorage.removeItem('cartItems');\n    },\n    saveShippingAddress: (state, action) => {\n      state.shippingAddress = action.payload;\n      localStorage.setItem('shippingAddress', JSON.stringify(action.payload));\n    },\n    clearShippingAddress: state => {\n      state.shippingAddress = null;\n      localStorage.removeItem('shippingAddress');\n    },\n    closeCart: state => {\n      // This action is handled by the UI slice, but we include it here for consistency\n      // The actual cart closing logic is in the UI slice\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  saveShippingAddress,\n  clearShippingAddress,\n  closeCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","JSON","parse","localStorage","getItem","totalItems","totalPrice","shippingAddress","cartSlice","name","reducers","addToCart","state","action","product","quantity","payload","existingItem","find","item","_id","_product$images$","push","price","image","images","url","stock","reduce","total","setItem","stringify","removeFromCart","filter","updateQuantity","productId","clearCart","removeItem","saveShippingAddress","clearShippingAddress","closeCart","actions","reducer"],"sources":["/Users/adityapandey/Desktop/HarshKumar/client/src/store/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  items: JSON.parse(localStorage.getItem('cartItems')) || [],\n  totalItems: 0,\n  totalPrice: 0,\n  shippingAddress: JSON.parse(localStorage.getItem('shippingAddress')) || null,\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const { product, quantity = 1 } = action.payload;\n      const existingItem = state.items.find(item => item._id === product._id);\n\n      if (existingItem) {\n        existingItem.quantity += quantity;\n      } else {\n        state.items.push({\n          _id: product._id,\n          name: product.name,\n          price: product.price,\n          image: product.images[0]?.url || '',\n          stock: product.stock,\n          quantity,\n        });\n      }\n\n      // Update totals\n      state.totalItems = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.totalPrice = state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\n\n      // Save to localStorage\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    removeFromCart: (state, action) => {\n      state.items = state.items.filter(item => item._id !== action.payload);\n      \n      // Update totals\n      state.totalItems = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.totalPrice = state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\n\n      // Save to localStorage\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    updateQuantity: (state, action) => {\n      const { productId, quantity } = action.payload;\n      const item = state.items.find(item => item._id === productId);\n      \n      if (item) {\n        if (quantity <= 0) {\n          state.items = state.items.filter(item => item._id !== productId);\n        } else {\n          item.quantity = quantity;\n        }\n      }\n\n      // Update totals\n      state.totalItems = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.totalPrice = state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\n\n      // Save to localStorage\n      localStorage.setItem('cartItems', JSON.stringify(state.items));\n    },\n    clearCart: (state) => {\n      state.items = [];\n      state.totalItems = 0;\n      state.totalPrice = 0;\n      localStorage.removeItem('cartItems');\n    },\n    saveShippingAddress: (state, action) => {\n      state.shippingAddress = action.payload;\n      localStorage.setItem('shippingAddress', JSON.stringify(action.payload));\n    },\n    clearShippingAddress: (state) => {\n      state.shippingAddress = null;\n      localStorage.removeItem('shippingAddress');\n    },\n    closeCart: (state) => {\n      // This action is handled by the UI slice, but we include it here for consistency\n      // The actual cart closing logic is in the UI slice\n    },\n  },\n});\n\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  saveShippingAddress,\n  clearShippingAddress,\n  closeCart,\n} = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}