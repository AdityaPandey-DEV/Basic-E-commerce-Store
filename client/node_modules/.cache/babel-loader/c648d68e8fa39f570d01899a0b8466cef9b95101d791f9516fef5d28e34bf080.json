{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  sidebarOpen: false,\n  searchOpen: false,\n  cartOpen: false,\n  loading: false,\n  theme: 'light',\n  notifications: []\n};\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleSidebar: state => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    closeSidebar: state => {\n      state.sidebarOpen = false;\n    },\n    toggleSearch: state => {\n      state.searchOpen = !state.searchOpen;\n    },\n    closeSearch: state => {\n      state.searchOpen = false;\n    },\n    toggleCart: state => {\n      state.cartOpen = !state.cartOpen;\n    },\n    closeCart: state => {\n      state.cartOpen = false;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    },\n    addNotification: (state, action) => {\n      state.notifications.push({\n        id: Date.now(),\n        ...action.payload\n      });\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    clearNotifications: state => {\n      state.notifications = [];\n    }\n  }\n});\nexport const {\n  toggleSidebar,\n  closeSidebar,\n  toggleSearch,\n  closeSearch,\n  toggleCart,\n  closeCart,\n  setLoading,\n  setTheme,\n  addNotification,\n  removeNotification,\n  clearNotifications\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","sidebarOpen","searchOpen","cartOpen","loading","theme","notifications","uiSlice","name","reducers","toggleSidebar","state","closeSidebar","toggleSearch","closeSearch","toggleCart","closeCart","setLoading","action","payload","setTheme","addNotification","push","id","Date","now","removeNotification","filter","notification","clearNotifications","actions","reducer"],"sources":["/Users/adityapandey/Desktop/HarshKumar/client/src/store/slices/uiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  sidebarOpen: false,\n  searchOpen: false,\n  cartOpen: false,\n  loading: false,\n  theme: 'light',\n  notifications: [],\n};\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleSidebar: (state) => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    closeSidebar: (state) => {\n      state.sidebarOpen = false;\n    },\n    toggleSearch: (state) => {\n      state.searchOpen = !state.searchOpen;\n    },\n    closeSearch: (state) => {\n      state.searchOpen = false;\n    },\n    toggleCart: (state) => {\n      state.cartOpen = !state.cartOpen;\n    },\n    closeCart: (state) => {\n      state.cartOpen = false;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    },\n    addNotification: (state, action) => {\n      state.notifications.push({\n        id: Date.now(),\n        ...action.payload,\n      });\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(\n        notification => notification.id !== action.payload\n      );\n    },\n    clearNotifications: (state) => {\n      state.notifications = [];\n    },\n  },\n});\n\nexport const {\n  toggleSidebar,\n  closeSidebar,\n  toggleSearch,\n  closeSearch,\n  toggleCart,\n  closeCart,\n  setLoading,\n  setTheme,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n} = uiSlice.actions;\n\nexport default uiSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,KAAK;EACfC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,OAAO;EACdC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,OAAO,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAE,IAAI;EACVR,YAAY;EACZS,QAAQ,EAAE;IACRC,aAAa,EAAGC,KAAK,IAAK;MACxBA,KAAK,CAACV,WAAW,GAAG,CAACU,KAAK,CAACV,WAAW;IACxC,CAAC;IACDW,YAAY,EAAGD,KAAK,IAAK;MACvBA,KAAK,CAACV,WAAW,GAAG,KAAK;IAC3B,CAAC;IACDY,YAAY,EAAGF,KAAK,IAAK;MACvBA,KAAK,CAACT,UAAU,GAAG,CAACS,KAAK,CAACT,UAAU;IACtC,CAAC;IACDY,WAAW,EAAGH,KAAK,IAAK;MACtBA,KAAK,CAACT,UAAU,GAAG,KAAK;IAC1B,CAAC;IACDa,UAAU,EAAGJ,KAAK,IAAK;MACrBA,KAAK,CAACR,QAAQ,GAAG,CAACQ,KAAK,CAACR,QAAQ;IAClC,CAAC;IACDa,SAAS,EAAGL,KAAK,IAAK;MACpBA,KAAK,CAACR,QAAQ,GAAG,KAAK;IACxB,CAAC;IACDc,UAAU,EAAEA,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC7BP,KAAK,CAACP,OAAO,GAAGc,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,QAAQ,EAAEA,CAACT,KAAK,EAAEO,MAAM,KAAK;MAC3BP,KAAK,CAACN,KAAK,GAAGa,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,eAAe,EAAEA,CAACV,KAAK,EAAEO,MAAM,KAAK;MAClCP,KAAK,CAACL,aAAa,CAACgB,IAAI,CAAC;QACvBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACd,GAAGP,MAAM,CAACC;MACZ,CAAC,CAAC;IACJ,CAAC;IACDO,kBAAkB,EAAEA,CAACf,KAAK,EAAEO,MAAM,KAAK;MACrCP,KAAK,CAACL,aAAa,GAAGK,KAAK,CAACL,aAAa,CAACqB,MAAM,CAC9CC,YAAY,IAAIA,YAAY,CAACL,EAAE,KAAKL,MAAM,CAACC,OAC7C,CAAC;IACH,CAAC;IACDU,kBAAkB,EAAGlB,KAAK,IAAK;MAC7BA,KAAK,CAACL,aAAa,GAAG,EAAE;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXI,aAAa;EACbE,YAAY;EACZC,YAAY;EACZC,WAAW;EACXC,UAAU;EACVC,SAAS;EACTC,UAAU;EACVG,QAAQ;EACRC,eAAe;EACfK,kBAAkB;EAClBG;AACF,CAAC,GAAGtB,OAAO,CAACuB,OAAO;AAEnB,eAAevB,OAAO,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}